{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","rsp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGO,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB7C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAnBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,Y,mCCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKHI,MAAMF,GALH,cAKfG,EALe,gBAMEA,EAAIC,OANN,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdf,mBAAS,CAAEsB,KAAM,GAAIa,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDV2BK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GACC,mBAAGJ,UAAU,mCAAb,wBAGA,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZrBgB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,gBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAW9B,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAkBA,IAC/B,uBACA,6BAEQ4C,EAAWnB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjB7B6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.83e9162e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function AddCategory({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cate) => [inputValue, ...cate]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Busca un gif\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=gipiT1QeuYFHUOlQmVK1APZP3vdgvxxq`;\r\n\r\n  const rsp = await fetch(url);\r\n  const { data } = await rsp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Cargando..</p>\r\n      )}\r\n      {\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //   setCategories( [...categories, 'Daniel'] );\r\n    //   setCategories( cate => [...categories, 'Daniel'] );\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>       \r\n            <h2>GifExpertApp</h2>     \r\n            <AddCategory setCategories = { setCategories }/> \r\n            <hr></hr>           \r\n            <ol>\r\n                { \r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                     ) )\r\n                }\r\n            </ol>\r\n        </>    \r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}